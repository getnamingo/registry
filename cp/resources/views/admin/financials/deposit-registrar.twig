{% extends "layouts/app.twig" %}

{% block title %}{{ __('Registrar Deposit') }}{% endblock %}

{% block content %}
<link href="/assets/css/sweetalert2.min.css" rel="stylesheet">
      <div class="page-wrapper">
        <!-- Page header -->
        <div class="page-header d-print-none">
          <div class="container-xl">
            <div class="row g-2 align-items-center">
              <div class="col">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                  {{ __('Overview') }}
                </div>
                <h2 class="page-title">
                  {{ __('Registrar Deposit') }}
                </h2>
              </div>
            </div>
          </div>
        </div>
        <!-- Page body -->
        <div class="page-body">
          <div class="container-xl">
            <div class="col-12">
            {% include 'partials/flash.twig' %}
              <div class="card">
                <div class="card-body">
                  <form id="depositForm" action="#" method="post">
                  {{ csrf.field | raw }}                 
                    <div class="deposit-info">
                        <h5>{{ __('Current Balance for') }} {{ balance.name }}</h5>
                        <p class="fs-4">{{ currency }} {{ balance.accountBalance }}</p>
                    </div>

                    <div class="mb-3">
                        <label for="amount" class="form-label">{{ __('Amount') }}</label>
                        <input type="number" step="0.01" class="form-control" id="amount" name="amount" placeholder="{{ __('Enter deposit amount') }}" required>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">{{ __('Payment Method') }}</label>
                        <div class="form-selectgroup form-selectgroup-boxes d-flex flex-column">
                            <label class="form-selectgroup-item flex-fill">
                                <input type="radio" name="paymentMethod" value="stripe" class="form-selectgroup-input" required>
                                <div class="form-selectgroup-label d-flex align-items-center p-3">
                                    <div class="me-3">
                                        <span class="form-selectgroup-check"></span>
                                    </div>
                                    <div>
                                        <span class="payment payment-provider-stripe payment-xs me-2"></span>
                                        {{ __('Stripe') }}
                                    </div>
                                </div>
                            </label>
                            <label class="form-selectgroup-item flex-fill">
                                <input type="radio" name="paymentMethod" value="adyen" class="form-selectgroup-input">
                                <div class="form-selectgroup-label d-flex align-items-center p-3">
                                    <div class="me-3">
                                        <span class="form-selectgroup-check"></span>
                                    </div>
                                    <div>
                                        <span class="payment payment-provider-adyen payment-xs me-2"></span>
                                        {{ __('Adyen') }}
                                    </div>
                                </div>
                            </label>
                            <label class="form-selectgroup-item flex-fill">
                                <input type="radio" name="paymentMethod" value="crypto" class="form-selectgroup-input">
                                <div class="form-selectgroup-label d-flex align-items-center p-3">
                                    <div class="me-3">
                                        <span class="form-selectgroup-check"></span>
                                    </div>
                                    <div>
                                        <span class="payment payment-provider-bitcoin payment-xs me-2"></span>
                                        {{ __('Crypto') }}
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                  <div class="row align-items-center">
                    <div class="d-grid gap-2 d-md-block">
                      <button type="submit" class="btn btn-primary">{{ __('Add Deposit') }}</button>
                    </div>
                  </div>
                </div>
                </form>
                </div>
              </div>
            </div>
          </div>
        </div>
        {% include 'partials/footer.twig' %}
      </div>
<script src="https://js.stripe.com/v3/"></script>
<script type="text/javascript">
document.getElementById('depositForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const formData = new FormData(this);
    const paymentMethod = formData.get('paymentMethod');
    const amount = document.getElementById('amount').value.trim();

    // Validate the amount
    if (!amount || isNaN(amount) || parseFloat(amount) <= 0) {
        Swal.fire({
            icon: 'warning',
            title: '{{ __("Invalid Amount") }}',
            text: '{{ __("Please enter a valid deposit amount.") }}'
        });
        return;
    }

    // Route the request based on the payment method
    if (paymentMethod === 'stripe') {
        handleStripePayment(formData);
    } else if (paymentMethod === 'adyen') {
        handleAdyenPayment(formData);
    } else if (paymentMethod === 'crypto') {
        handleCryptoPayment(formData);
    } else {
        Swal.fire({
            icon: 'error',
            title: '{{ __("Error") }}',
            text: '{{ __("No payment method selected.") }}'
        });
    }
});

// Function to handle Stripe payment
function handleStripePayment(formData) {
    const stripe = Stripe('{{ stripe_key }}'); // Initialize Stripe with the correct key

    fetch('/create-payment', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(session => {
        if (session.error) {
            console.error('Stripe Error:', session.error);
            Swal.fire({
                icon: 'error',
                title: '{{ __("Payment Error") }}',
                text: session.error
            });
        } else {
            console.log('Stripe session created:', session);
            stripe.redirectToCheckout({ sessionId: session.id });
        }
    })
    .catch(error => {
        console.error('Error in Stripe payment:', error);
        Swal.fire({
            icon: 'error',
            title: '{{ __("Unexpected Error") }}',
            text: '{{ __("An unexpected error occurred. Please try again later. Ensure the payment gateway is properly configured.") }}'
        });
    });
}

// Function to handle Adyen payment
function handleAdyenPayment(formData) {
    fetch('/create-adyen-payment', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            console.error('Adyen Error:', data.error);
            Swal.fire({
                icon: 'error',
                title: '{{ __("Payment Error") }}',
                text: data.error
            });
        } else {
            console.log('Adyen payment success:', data);
            window.location.href = data.url;
        }
    })
    .catch(error => {
        console.error('Error in Adyen payment:', error);
        Swal.fire({
            icon: 'error',
            title: '{{ __("Unexpected Error") }}',
            text: '{{ __("An unexpected error occurred. Please try again later. Ensure the payment gateway is properly configured.") }}'
        });
    });
}

// Function to handle Crypto payment
function handleCryptoPayment(formData) {
    fetch('/create-crypto-payment', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            console.error('Crypto Error:', data.error);
            Swal.fire({
                icon: 'error',
                title: '{{ __("Payment Error") }}',
                text: data.error
            });
        } else {
            console.log('Crypto payment success:', data);
            window.location.href = data.invoice_url;
        }
    })
    .catch(error => {
        console.error('Error in Crypto payment:', error);
        Swal.fire({
            icon: 'error',
            title: '{{ __("Unexpected Error") }}',
            text: '{{ __("An unexpected error occurred. Please try again later. Ensure the payment gateway is properly configured.") }}'
        });
    });
}
</script>
{% endblock %}