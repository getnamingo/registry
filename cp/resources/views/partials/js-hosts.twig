<script src="/assets/js/tabulator.min.js" defer></script>
<script src="/assets/js/sweetalert2.min.js" defer></script>
<script src="/assets/js/tabler.min.js" defer></script>
<script src="/assets/js/xlsx.full.min.js" defer></script>
<script src="/assets/js/jspdf.umd.min.js" defer></script>
<script src="/assets/js/jspdf.plugin.autotable.min.js" defer></script>
<script>
    var table;
    
    document.addEventListener("DOMContentLoaded", function(){
 
    function hostLinkFormatter(cell){
        var value = cell.getValue();
        return `<a href="/host/view/${value}" style="font-weight:bold;">${value}</a>`;
    }
   
    function actionsFormatter(cell, formatterParams, onRendered) {
        return `
            <a class="btn btn-outline-primary btn-icon update-btn" href="host/update/${cell.getRow().getData().name}" title="{{ __('Update Host') }}"><svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1"></path><path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z"></path><path d="M16 5l3 3"></path></svg></a>
            <a class="btn btn-outline-danger btn-icon delete-btn" id="delete-btn" href="javascript:void(0);" data-delete-url="host/delete/${cell.getRow().getData().name}" title="{{ __('Delete Host') }}"><svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M4 7h16"></path><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path><path d="M10 12l4 4m0 -4l-4 4"></path></svg></a>
        `;
    }

    var searchTerm = ""; // global variable to hold the search term

    function updateSearchTerm(term) {
        searchTerm = term;
        table.replaceData();
    }

    table = new Tabulator("#hostTable", {
        pagination: true,
        paginationMode: "remote",
        paginationSize: 10,
        paginationSizeSelector:[10, 25, 50, 100],
        clipboard:true,
        clipboardPasteAction:"replace",
        sortMode: "remote",
        ajaxURL: "/api/records/host",
        ajaxURLGenerator: function(url, config, params) {
            var queryParts = [];

            // Handle search term
            if (searchTerm) {
                queryParts.push("filter1=name,cs," + encodeURIComponent(searchTerm));
                queryParts.push("filter2=crdate,cs," + encodeURIComponent(searchTerm));
                queryParts.push("filter3=lastupdate,cs," + encodeURIComponent(searchTerm));
            }

            // Handle sorting from Tabulator
            if (params.sort && params.sort.length > 0) {
                var sorter = params.sort[0]; // single-column sorting
                var sortField = encodeURIComponent(sorter.field);
                var sortDir = (sorter.dir === "asc" ? "asc" : "desc");
                queryParts.push("order=" + sortField + "," + sortDir);
            } else {
                // fallback default order if no sorters
                queryParts.push("order=name,asc");
            }

            // Include pagination parameters
            if (params.page) {
                queryParts.push("page=" + params.page + "," + params.size);
            }

            return url + "?" + queryParts.join("&");
        },
        ajaxResponse: function(url, params, response) {
            if (response && Array.isArray(response.records) && typeof response.results === 'number') {
                var pageSize = params.size || this.options.paginationSize;
                var lastPage = Math.ceil(response.results / pageSize);
                return {
                    last_page: lastPage,
                    data: response.records,
                };
            } else {
                console.error('Unexpected response format', response);
                return { last_page: 1, data: [] };
            }
        },
        layout:"fitColumns",
        responsiveLayout: "collapse",
        responsiveLayoutCollapseStartOpen:false,
        resizableColumns:false,
        placeholder: "{{ __('No Data') }}",
        columns:[
            {formatter:"responsiveCollapse", width:30, minWidth:30, hozAlign:"center", resizable:false, headerSort:false, responsive:0},
            {title:"{{ __('Host Name') }}", field:"name", minWidth:150, resizable:false, headerSort:true, formatter: hostLinkFormatter, responsive:0},
            {title:"{{ __('Creation Date') }}", field:"crdate", width:300, minWidth:200, resizable:false, headerSort:true, responsive:2},
            {title:"{{ __('Last Updated') }}", field:"lastupdate", width:300, minWidth:200, resizable:false, headerSort:true, responsive:2},
            {title: "{{ __('Actions') }}", formatter: actionsFormatter, resizable:false, headerSort:false, download:false, hozAlign: "center", responsive:0, cellClick: function(e, cell){
                if (e.target.closest('.delete-btn')) {
                    e.preventDefault(); // Prevent the default link behavior
                    Swal.fire({
                      title: "{{ __('Are you sure you want to delete this host?') }}",
                      showCancelButton: true,
                      confirmButtonText: "{{ __('Confirm') }}"
                    }).then((result) => {
                      if (result.isConfirmed) {
                        let deleteUrl = e.target.closest('.delete-btn').getAttribute('data-delete-url');
                        window.location.href = deleteUrl;
                      }
                    });
                }
            }},
        ]
    });

    var searchInput = document.getElementById("search-input");
    let searchTimeout;

    searchInput.addEventListener("input", function () {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(() => {
        updateSearchTerm(searchInput.value);
      }, 300); // 300ms delay
    });
    });
      
    function downloadCSV() {
        table.download("csv", "hosts.csv");
    }

    function downloadJSON() {
        table.download("json", "hosts.json");
    }

    function downloadXLSX() {
        table.download("xlsx", "hosts.xlsx", {sheetName:"My Hosts"});
    }
    
    function downloadPDF() {
        table.download("pdf", "hosts.pdf", {
            orientation:"portrait",
            title:"My Hosts"
        });
    }
</script>